import { useState, useEffect } from "react";
import getAtlasCardProfileAPI from "@/api/getAtlasCardProfile";
import { useTranslations } from "next-intl";

const ProfileViewport = ({ card, visible }) => {
    const [profile, setProfile] = useState(null);
    const t = useTranslations('trans');

    function formatDateToDDMMYYYY(dateString) {
        if (!dateString) return "";
    
        const [year, month, day] = dateString.split("-");
        return `${day}/${month}/${year}`;
    }

    useEffect(() => {

        if (profile) return;
        if (!visible) return;


        // Fetch the card profile data when the component mounts or when the card prop changes
        const fetchCardProfile = async () => {
            const { uid, cid, ctype } = card;
            const payload = await getAtlasCardProfileAPI(uid, cid, ctype);
            if (!payload) return;
            setProfile(payload);
        };

        fetchCardProfile();
    }
        , [visible]);

    return (
        <div className={`md:col-span-4 space-y-4 sm:space-y-5 ${visible ? 'block' : 'hidden'}`}>
            {/* Body with proper spacing - Business Profile */}
            <div className="p-5 space-y-6">
                {/* Gi·ªõi thi·ªáu doanh nghi·ªáp */}
                {/* <div className="bg-white p-2 rounded-xl border border-gray-100 shadow-sm">
                    <div className="flex items-start space-x-3">
                        <span className="text-pink-500 text-xl">üå∏</span>
                        <div>
                            <h3 className="text-lg font-semibold text-gray-800 mb-2">Gi·ªõi thi·ªáu doanh nghi·ªáp</h3>
                            <p className="text-gray-600 text-sm leading-relaxed">
                                123flower l√† th∆∞∆°ng hi·ªáu h√†ng ƒë·∫ßu trong lƒ©nh v·ª±c cung c·∫•p hoa t∆∞∆°i v√† qu√† t·∫∑ng t·∫°i Vi·ªát Nam v√† qu·ªëc t·∫ø.
                                Ch√∫ng t√¥i cam k·∫øt mang ƒë·∫øn nh·ªØng s·∫£n ph·∫©m ch·∫•t l∆∞·ª£ng nh·∫•t v·ªõi d·ªãch v·ª• giao hoa nhanh ch√≥ng,
                                ƒë√∫ng h·∫πn v√† t·∫≠n t√¢m.
                            </p>
                        </div>
                    </div>
                </div> */}

                {/* Th√¥ng tin doanh nghi·ªáp */}
                <div className="bg-white p-2 rounded-xl border border-gray-100 shadow-sm">
                    <div className="flex items-start space-x-3">
                        <span className="text-blue-500 text-xl">üíº</span>
                        <div className="w-full">
                            <h3 className="text-lg font-semibold text-gray-800 mb-3">{t("atlas.tags.company_info")}</h3>
                            <div className="grid grid-cols-1  gap-3">
                                <InfoItem label={t("atlas.tags.company_name")} value={profile?.corpName.toUpperCase()} />
                                <InfoItem label={t("atlas.tags.company_code")} value={profile?.taxcode} />
                                <InfoItem label={t("atlas.tags.company_type")} value="" />
                                <InfoItem label={t("atlas.tags.reg_date")} value={formatDateToDDMMYYYY(profile?.regDate)} />
                                <InfoItem label={t("atlas.tags.major")} value={profile?.bizFields} />
                            </div>
                        </div>
                    </div>
                </div>

                {/* Tr·ª• s·ªü ch√≠nh */}
                <div className="bg-white p-2 rounded-xl border border-gray-100 shadow-sm">
                    <div className="flex items-start space-x-3">
                        <span className="text-green-500 text-xl">üè¢</span>
                        <div className="w-full">
                            <h3 className="text-lg font-semibold text-gray-800 mb-3">{t("atlas.tags.main_office")}</h3>
                            <div className="grid grid-cols-1 gap-3">
                                <InfoItem label={t("atlas.tags.address")} value={profile?.officeAddr}/>
                                <InfoItem label={t("atlas.tags.phone")} value={profile?.phoneNumber}/>
                                <InfoItem label={t("atlas.tags.email")} value={profile?.email}/>
                                <InfoItem label={t("atlas.tags.website")} value={profile?.website}/>
                            </div>
                        </div>
                    </div>
                </div>

                {/* S·ª© m·ªánh & Gi√° tr·ªã */}
                <div className="bg-white p-2 rounded-xl border border-gray-100 shadow-sm">
                    <div className="flex items-start space-x-3">
                        <span className="text-yellow-500 text-xl">‚≠ê</span>
                        <div>
                            <h3 className="text-lg font-semibold text-gray-800 mb-2">{t("atlas.tags.mission_value")}</h3>
                            <div className="space-y-2">
                                <p className="text-gray-600 text-sm">
                                    <span className="font-medium">{t("atlas.tags.mission")}:</span> {profile?.vision}
                                </p>
                                <p className="text-gray-600 text-sm">
                                    <span className="font-medium">{t("atlas.tags.value")}:</span> {profile?.mission}
                                </p>
                            </div>
                        </div>
                    </div>
                </div>

                {/* ƒê·ªôi ng≈© & Kh√°ch h√†ng */}
                <div className="bg-white p-2 rounded-xl border border-gray-100 shadow-sm">
                    <div className="flex items-start space-x-3">
                        <span className="text-red-500 text-xl">üë®‚Äçüíº</span>
                        <div>
                            <h3 className="text-lg font-semibold text-gray-800 mb-2">{t("atlas.tags.customer")}</h3>
                            <ul className="list-disc list-inside text-gray-600 text-sm space-y-1">
                                <li>ƒê·ªôi ng≈© h∆°n 50 nh√¢n vi√™n v√† ngh·ªá nh√¢n c·∫Øm hoa chuy√™n nghi·ªáp</li>
                                <li>H∆°n 100.000 kh√°ch h√†ng c√° nh√¢n v√† doanh nghi·ªáp</li>
                                <li>ƒê·ªëi t√°c ti√™u bi·ªÉu: Tiki, Shopee, Grab, Lazada, Samsung</li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>


        </div>
    );
}

export default ProfileViewport;

// Component ph·ª• tr·ª£ hi·ªÉn th·ªã th√¥ng tin chi ti·∫øt
const InfoItem = ({ label, value }) => (
    <div className="flex flex-col sm:flex-row sm:items-start sm:space-x-3">
        <span className="text-gray-500 text-sm font-medium min-w-[120px]">{label}:</span>
        {value ? (
            <span className="text-gray-700 text-sm mt-1 sm:mt-0">{value}</span>
        ) : (
            <span className="inline-flex items-center px-3 py-0.5 rounded-full text-xs font-semibold bg-orange-400 text-white shadow-sm border border-orange-500 mt-1 sm:mt-0">
                Ch∆∞a cung c·∫•p
            </span>
        )}
    </div>
);